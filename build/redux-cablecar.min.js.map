{"version":3,"sources":["webpack://cablecar/webpack/bootstrap","webpack://cablecar/./node_modules/actioncable/lib/assets/compiled/action_cable.js","webpack://cablecar/./src/cableCar.js","webpack://cablecar/./src/middleware.js","webpack://cablecar/./src/cableCarDispatcher.js","webpack://cablecar/./index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","slice","this","ActionCable","INTERNAL","WebSocket","window","logger","console","createConsumer","url","ref","getConfig","default_mount_path","Consumer","createWebSocketURL","element","document","head","querySelector","getAttribute","a","test","createElement","href","protocol","replace","startDebugging","debugging","stopDebugging","log","messages","arguments","length","push","Date","now","apply","concat","ConnectionMonitor","clamp","secondsSince","connection","fn","me","visibilityDidChange","reconnectAttempts","pollInterval","min","max","staleThreshold","start","isRunning","startedAt","stoppedAt","startPolling","addEventListener","getPollInterval","stop","stopPolling","removeEventListener","recordPing","pingedAt","recordConnect","disconnectedAt","recordDisconnect","poll","clearTimeout","pollTimeout","setTimeout","_this","reconnectIfStale","interval","constructor","Math","round","connectionIsStale","disconnectedRecently","reopen","visibilityState","isOpen","getTime","time","number","message_types","protocols","supportedProtocols","indexOf","item","Connection","consumer","open","subscriptions","monitor","disconnected","reopenDelay","send","data","webSocket","JSON","stringify","isActive","getState","uninstallEventHandlers","installEventHandlers","close","arg","ref1","allowReconnect","error","error1","getProtocol","isState","isProtocolSupported","states","state","readyState","toLowerCase","eventName","handler","events","message","event","identifier","parse","type","welcome","reload","ping","confirmation","notify","rejection","reject","notifyAll","willAttemptReconnect","Subscriptions","channelName","mixin","channel","params","subscription","Subscription","add","ensureActiveConnection","sendCommand","remove","forget","findAll","len","results","args","callbackName","command","extend","perform","action","unsubscribe","properties","connect","disconnect","CableCar","cableProvider","store","options","Error","dispatch","actionCableProvider","defaultOptions","prefix","optimisticOnFail","initialize","assign","running","cableParams","initialized","connected","received","msg","rejected","cable","wsURL","newAction","CableCar__Action","matchPrefix","method","payload","dispatcher","provider","lines","addLine","line","car","clearAllLines","clearLine","undefined","getLines","getCar","ReferenceError","oldLine","newLine","room","changeChannel","activeLine","getSingleActiveLine","allLines","activeLines","middleware","next","incomingAction","destroyCar","CableCarChannel","reset","changeCar","previousChannel","newChannel","getDefaultCar","allows","optimistic","require","e","addCar","getChannel","getParams","setProvider","newProvider"],"mappings":"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","file":"redux-cablecar.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","(function() {\n  var context = this;\n\n  (function() {\n    (function() {\n      var slice = [].slice;\n\n      this.ActionCable = {\n        INTERNAL: {\n          \"message_types\": {\n            \"welcome\": \"welcome\",\n            \"ping\": \"ping\",\n            \"confirmation\": \"confirm_subscription\",\n            \"rejection\": \"reject_subscription\"\n          },\n          \"default_mount_path\": \"/cable\",\n          \"protocols\": [\"actioncable-v1-json\", \"actioncable-unsupported\"]\n        },\n        WebSocket: window.WebSocket,\n        logger: window.console,\n        createConsumer: function(url) {\n          var ref;\n          if (url == null) {\n            url = (ref = this.getConfig(\"url\")) != null ? ref : this.INTERNAL.default_mount_path;\n          }\n          return new ActionCable.Consumer(this.createWebSocketURL(url));\n        },\n        getConfig: function(name) {\n          var element;\n          element = document.head.querySelector(\"meta[name='action-cable-\" + name + \"']\");\n          return element != null ? element.getAttribute(\"content\") : void 0;\n        },\n        createWebSocketURL: function(url) {\n          var a;\n          if (url && !/^wss?:/i.test(url)) {\n            a = document.createElement(\"a\");\n            a.href = url;\n            a.href = a.href;\n            a.protocol = a.protocol.replace(\"http\", \"ws\");\n            return a.href;\n          } else {\n            return url;\n          }\n        },\n        startDebugging: function() {\n          return this.debugging = true;\n        },\n        stopDebugging: function() {\n          return this.debugging = null;\n        },\n        log: function() {\n          var messages, ref;\n          messages = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n          if (this.debugging) {\n            messages.push(Date.now());\n            return (ref = this.logger).log.apply(ref, [\"[ActionCable]\"].concat(slice.call(messages)));\n          }\n        }\n      };\n\n    }).call(this);\n  }).call(context);\n\n  var ActionCable = context.ActionCable;\n\n  (function() {\n    (function() {\n      var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n      ActionCable.ConnectionMonitor = (function() {\n        var clamp, now, secondsSince;\n\n        ConnectionMonitor.pollInterval = {\n          min: 3,\n          max: 30\n        };\n\n        ConnectionMonitor.staleThreshold = 6;\n\n        function ConnectionMonitor(connection) {\n          this.connection = connection;\n          this.visibilityDidChange = bind(this.visibilityDidChange, this);\n          this.reconnectAttempts = 0;\n        }\n\n        ConnectionMonitor.prototype.start = function() {\n          if (!this.isRunning()) {\n            this.startedAt = now();\n            delete this.stoppedAt;\n            this.startPolling();\n            document.addEventListener(\"visibilitychange\", this.visibilityDidChange);\n            return ActionCable.log(\"ConnectionMonitor started. pollInterval = \" + (this.getPollInterval()) + \" ms\");\n          }\n        };\n\n        ConnectionMonitor.prototype.stop = function() {\n          if (this.isRunning()) {\n            this.stoppedAt = now();\n            this.stopPolling();\n            document.removeEventListener(\"visibilitychange\", this.visibilityDidChange);\n            return ActionCable.log(\"ConnectionMonitor stopped\");\n          }\n        };\n\n        ConnectionMonitor.prototype.isRunning = function() {\n          return (this.startedAt != null) && (this.stoppedAt == null);\n        };\n\n        ConnectionMonitor.prototype.recordPing = function() {\n          return this.pingedAt = now();\n        };\n\n        ConnectionMonitor.prototype.recordConnect = function() {\n          this.reconnectAttempts = 0;\n          this.recordPing();\n          delete this.disconnectedAt;\n          return ActionCable.log(\"ConnectionMonitor recorded connect\");\n        };\n\n        ConnectionMonitor.prototype.recordDisconnect = function() {\n          this.disconnectedAt = now();\n          return ActionCable.log(\"ConnectionMonitor recorded disconnect\");\n        };\n\n        ConnectionMonitor.prototype.startPolling = function() {\n          this.stopPolling();\n          return this.poll();\n        };\n\n        ConnectionMonitor.prototype.stopPolling = function() {\n          return clearTimeout(this.pollTimeout);\n        };\n\n        ConnectionMonitor.prototype.poll = function() {\n          return this.pollTimeout = setTimeout((function(_this) {\n            return function() {\n              _this.reconnectIfStale();\n              return _this.poll();\n            };\n          })(this), this.getPollInterval());\n        };\n\n        ConnectionMonitor.prototype.getPollInterval = function() {\n          var interval, max, min, ref;\n          ref = this.constructor.pollInterval, min = ref.min, max = ref.max;\n          interval = 5 * Math.log(this.reconnectAttempts + 1);\n          return Math.round(clamp(interval, min, max) * 1000);\n        };\n\n        ConnectionMonitor.prototype.reconnectIfStale = function() {\n          if (this.connectionIsStale()) {\n            ActionCable.log(\"ConnectionMonitor detected stale connection. reconnectAttempts = \" + this.reconnectAttempts + \", pollInterval = \" + (this.getPollInterval()) + \" ms, time disconnected = \" + (secondsSince(this.disconnectedAt)) + \" s, stale threshold = \" + this.constructor.staleThreshold + \" s\");\n            this.reconnectAttempts++;\n            if (this.disconnectedRecently()) {\n              return ActionCable.log(\"ConnectionMonitor skipping reopening recent disconnect\");\n            } else {\n              ActionCable.log(\"ConnectionMonitor reopening\");\n              return this.connection.reopen();\n            }\n          }\n        };\n\n        ConnectionMonitor.prototype.connectionIsStale = function() {\n          var ref;\n          return secondsSince((ref = this.pingedAt) != null ? ref : this.startedAt) > this.constructor.staleThreshold;\n        };\n\n        ConnectionMonitor.prototype.disconnectedRecently = function() {\n          return this.disconnectedAt && secondsSince(this.disconnectedAt) < this.constructor.staleThreshold;\n        };\n\n        ConnectionMonitor.prototype.visibilityDidChange = function() {\n          if (document.visibilityState === \"visible\") {\n            return setTimeout((function(_this) {\n              return function() {\n                if (_this.connectionIsStale() || !_this.connection.isOpen()) {\n                  ActionCable.log(\"ConnectionMonitor reopening stale connection on visibilitychange. visbilityState = \" + document.visibilityState);\n                  return _this.connection.reopen();\n                }\n              };\n            })(this), 200);\n          }\n        };\n\n        now = function() {\n          return new Date().getTime();\n        };\n\n        secondsSince = function(time) {\n          return (now() - time) / 1000;\n        };\n\n        clamp = function(number, min, max) {\n          return Math.max(min, Math.min(max, number));\n        };\n\n        return ConnectionMonitor;\n\n      })();\n\n    }).call(this);\n    (function() {\n      var i, message_types, protocols, ref, supportedProtocols, unsupportedProtocol,\n        slice = [].slice,\n        bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n        indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n      ref = ActionCable.INTERNAL, message_types = ref.message_types, protocols = ref.protocols;\n\n      supportedProtocols = 2 <= protocols.length ? slice.call(protocols, 0, i = protocols.length - 1) : (i = 0, []), unsupportedProtocol = protocols[i++];\n\n      ActionCable.Connection = (function() {\n        Connection.reopenDelay = 500;\n\n        function Connection(consumer) {\n          this.consumer = consumer;\n          this.open = bind(this.open, this);\n          this.subscriptions = this.consumer.subscriptions;\n          this.monitor = new ActionCable.ConnectionMonitor(this);\n          this.disconnected = true;\n        }\n\n        Connection.prototype.send = function(data) {\n          if (this.isOpen()) {\n            this.webSocket.send(JSON.stringify(data));\n            return true;\n          } else {\n            return false;\n          }\n        };\n\n        Connection.prototype.open = function() {\n          if (this.isActive()) {\n            ActionCable.log(\"Attempted to open WebSocket, but existing socket is \" + (this.getState()));\n            return false;\n          } else {\n            ActionCable.log(\"Opening WebSocket, current state is \" + (this.getState()) + \", subprotocols: \" + protocols);\n            if (this.webSocket != null) {\n              this.uninstallEventHandlers();\n            }\n            this.webSocket = new ActionCable.WebSocket(this.consumer.url, protocols);\n            this.installEventHandlers();\n            this.monitor.start();\n            return true;\n          }\n        };\n\n        Connection.prototype.close = function(arg) {\n          var allowReconnect, ref1;\n          allowReconnect = (arg != null ? arg : {\n            allowReconnect: true\n          }).allowReconnect;\n          if (!allowReconnect) {\n            this.monitor.stop();\n          }\n          if (this.isActive()) {\n            return (ref1 = this.webSocket) != null ? ref1.close() : void 0;\n          }\n        };\n\n        Connection.prototype.reopen = function() {\n          var error;\n          ActionCable.log(\"Reopening WebSocket, current state is \" + (this.getState()));\n          if (this.isActive()) {\n            try {\n              return this.close();\n            } catch (error1) {\n              error = error1;\n              return ActionCable.log(\"Failed to reopen WebSocket\", error);\n            } finally {\n              ActionCable.log(\"Reopening WebSocket in \" + this.constructor.reopenDelay + \"ms\");\n              setTimeout(this.open, this.constructor.reopenDelay);\n            }\n          } else {\n            return this.open();\n          }\n        };\n\n        Connection.prototype.getProtocol = function() {\n          var ref1;\n          return (ref1 = this.webSocket) != null ? ref1.protocol : void 0;\n        };\n\n        Connection.prototype.isOpen = function() {\n          return this.isState(\"open\");\n        };\n\n        Connection.prototype.isActive = function() {\n          return this.isState(\"open\", \"connecting\");\n        };\n\n        Connection.prototype.isProtocolSupported = function() {\n          var ref1;\n          return ref1 = this.getProtocol(), indexOf.call(supportedProtocols, ref1) >= 0;\n        };\n\n        Connection.prototype.isState = function() {\n          var ref1, states;\n          states = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n          return ref1 = this.getState(), indexOf.call(states, ref1) >= 0;\n        };\n\n        Connection.prototype.getState = function() {\n          var ref1, state, value;\n          for (state in WebSocket) {\n            value = WebSocket[state];\n            if (value === ((ref1 = this.webSocket) != null ? ref1.readyState : void 0)) {\n              return state.toLowerCase();\n            }\n          }\n          return null;\n        };\n\n        Connection.prototype.installEventHandlers = function() {\n          var eventName, handler;\n          for (eventName in this.events) {\n            handler = this.events[eventName].bind(this);\n            this.webSocket[\"on\" + eventName] = handler;\n          }\n        };\n\n        Connection.prototype.uninstallEventHandlers = function() {\n          var eventName;\n          for (eventName in this.events) {\n            this.webSocket[\"on\" + eventName] = function() {};\n          }\n        };\n\n        Connection.prototype.events = {\n          message: function(event) {\n            var identifier, message, ref1, type;\n            if (!this.isProtocolSupported()) {\n              return;\n            }\n            ref1 = JSON.parse(event.data), identifier = ref1.identifier, message = ref1.message, type = ref1.type;\n            switch (type) {\n              case message_types.welcome:\n                this.monitor.recordConnect();\n                return this.subscriptions.reload();\n              case message_types.ping:\n                return this.monitor.recordPing();\n              case message_types.confirmation:\n                return this.subscriptions.notify(identifier, \"connected\");\n              case message_types.rejection:\n                return this.subscriptions.reject(identifier);\n              default:\n                return this.subscriptions.notify(identifier, \"received\", message);\n            }\n          },\n          open: function() {\n            ActionCable.log(\"WebSocket onopen event, using '\" + (this.getProtocol()) + \"' subprotocol\");\n            this.disconnected = false;\n            if (!this.isProtocolSupported()) {\n              ActionCable.log(\"Protocol is unsupported. Stopping monitor and disconnecting.\");\n              return this.close({\n                allowReconnect: false\n              });\n            }\n          },\n          close: function(event) {\n            ActionCable.log(\"WebSocket onclose event\");\n            if (this.disconnected) {\n              return;\n            }\n            this.disconnected = true;\n            this.monitor.recordDisconnect();\n            return this.subscriptions.notifyAll(\"disconnected\", {\n              willAttemptReconnect: this.monitor.isRunning()\n            });\n          },\n          error: function() {\n            return ActionCable.log(\"WebSocket onerror event\");\n          }\n        };\n\n        return Connection;\n\n      })();\n\n    }).call(this);\n    (function() {\n      var slice = [].slice;\n\n      ActionCable.Subscriptions = (function() {\n        function Subscriptions(consumer) {\n          this.consumer = consumer;\n          this.subscriptions = [];\n        }\n\n        Subscriptions.prototype.create = function(channelName, mixin) {\n          var channel, params, subscription;\n          channel = channelName;\n          params = typeof channel === \"object\" ? channel : {\n            channel: channel\n          };\n          subscription = new ActionCable.Subscription(this.consumer, params, mixin);\n          return this.add(subscription);\n        };\n\n        Subscriptions.prototype.add = function(subscription) {\n          this.subscriptions.push(subscription);\n          this.consumer.ensureActiveConnection();\n          this.notify(subscription, \"initialized\");\n          this.sendCommand(subscription, \"subscribe\");\n          return subscription;\n        };\n\n        Subscriptions.prototype.remove = function(subscription) {\n          this.forget(subscription);\n          if (!this.findAll(subscription.identifier).length) {\n            this.sendCommand(subscription, \"unsubscribe\");\n          }\n          return subscription;\n        };\n\n        Subscriptions.prototype.reject = function(identifier) {\n          var i, len, ref, results, subscription;\n          ref = this.findAll(identifier);\n          results = [];\n          for (i = 0, len = ref.length; i < len; i++) {\n            subscription = ref[i];\n            this.forget(subscription);\n            this.notify(subscription, \"rejected\");\n            results.push(subscription);\n          }\n          return results;\n        };\n\n        Subscriptions.prototype.forget = function(subscription) {\n          var s;\n          this.subscriptions = (function() {\n            var i, len, ref, results;\n            ref = this.subscriptions;\n            results = [];\n            for (i = 0, len = ref.length; i < len; i++) {\n              s = ref[i];\n              if (s !== subscription) {\n                results.push(s);\n              }\n            }\n            return results;\n          }).call(this);\n          return subscription;\n        };\n\n        Subscriptions.prototype.findAll = function(identifier) {\n          var i, len, ref, results, s;\n          ref = this.subscriptions;\n          results = [];\n          for (i = 0, len = ref.length; i < len; i++) {\n            s = ref[i];\n            if (s.identifier === identifier) {\n              results.push(s);\n            }\n          }\n          return results;\n        };\n\n        Subscriptions.prototype.reload = function() {\n          var i, len, ref, results, subscription;\n          ref = this.subscriptions;\n          results = [];\n          for (i = 0, len = ref.length; i < len; i++) {\n            subscription = ref[i];\n            results.push(this.sendCommand(subscription, \"subscribe\"));\n          }\n          return results;\n        };\n\n        Subscriptions.prototype.notifyAll = function() {\n          var args, callbackName, i, len, ref, results, subscription;\n          callbackName = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n          ref = this.subscriptions;\n          results = [];\n          for (i = 0, len = ref.length; i < len; i++) {\n            subscription = ref[i];\n            results.push(this.notify.apply(this, [subscription, callbackName].concat(slice.call(args))));\n          }\n          return results;\n        };\n\n        Subscriptions.prototype.notify = function() {\n          var args, callbackName, i, len, results, subscription, subscriptions;\n          subscription = arguments[0], callbackName = arguments[1], args = 3 <= arguments.length ? slice.call(arguments, 2) : [];\n          if (typeof subscription === \"string\") {\n            subscriptions = this.findAll(subscription);\n          } else {\n            subscriptions = [subscription];\n          }\n          results = [];\n          for (i = 0, len = subscriptions.length; i < len; i++) {\n            subscription = subscriptions[i];\n            results.push(typeof subscription[callbackName] === \"function\" ? subscription[callbackName].apply(subscription, args) : void 0);\n          }\n          return results;\n        };\n\n        Subscriptions.prototype.sendCommand = function(subscription, command) {\n          var identifier;\n          identifier = subscription.identifier;\n          return this.consumer.send({\n            command: command,\n            identifier: identifier\n          });\n        };\n\n        return Subscriptions;\n\n      })();\n\n    }).call(this);\n    (function() {\n      ActionCable.Subscription = (function() {\n        var extend;\n\n        function Subscription(consumer, params, mixin) {\n          this.consumer = consumer;\n          if (params == null) {\n            params = {};\n          }\n          this.identifier = JSON.stringify(params);\n          extend(this, mixin);\n        }\n\n        Subscription.prototype.perform = function(action, data) {\n          if (data == null) {\n            data = {};\n          }\n          data.action = action;\n          return this.send(data);\n        };\n\n        Subscription.prototype.send = function(data) {\n          return this.consumer.send({\n            command: \"message\",\n            identifier: this.identifier,\n            data: JSON.stringify(data)\n          });\n        };\n\n        Subscription.prototype.unsubscribe = function() {\n          return this.consumer.subscriptions.remove(this);\n        };\n\n        extend = function(object, properties) {\n          var key, value;\n          if (properties != null) {\n            for (key in properties) {\n              value = properties[key];\n              object[key] = value;\n            }\n          }\n          return object;\n        };\n\n        return Subscription;\n\n      })();\n\n    }).call(this);\n    (function() {\n      ActionCable.Consumer = (function() {\n        function Consumer(url) {\n          this.url = url;\n          this.subscriptions = new ActionCable.Subscriptions(this);\n          this.connection = new ActionCable.Connection(this);\n        }\n\n        Consumer.prototype.send = function(data) {\n          return this.connection.send(data);\n        };\n\n        Consumer.prototype.connect = function() {\n          return this.connection.open();\n        };\n\n        Consumer.prototype.disconnect = function() {\n          return this.connection.close({\n            allowReconnect: false\n          });\n        };\n\n        Consumer.prototype.ensureActiveConnection = function() {\n          if (!this.connection.isActive()) {\n            return this.connection.open();\n          }\n        };\n\n        return Consumer;\n\n      })();\n\n    }).call(this);\n  }).call(this);\n\n  if (typeof module === \"object\" && module.exports) {\n    module.exports = ActionCable;\n  } else if (typeof define === \"function\" && define.amd) {\n    define(ActionCable);\n  }\n}).call(this);\n","\nexport default class CableCar {\n\n  constructor(cableProvider, store, channel, options = {}) {\n    if (typeof cableProvider === 'undefined') {\n      throw new Error(`CableCar: unknown ActionCable provider: ${cableProvider}`);\n    }\n\n    if (typeof store === 'undefined' || typeof store.dispatch === 'undefined') {\n      throw new Error(`CableCar: unknown store: ${store}`);\n    }\n\n    if (typeof channel !== 'string') {\n      throw new Error(`CableCar: unknown channel: ${channel}`);\n    }\n\n    this.actionCableProvider = cableProvider;\n    this.store = store;\n\n    const defaultOptions = { prefix: 'RAILS', optimisticOnFail: false };\n    this.initialize(channel, Object.assign(defaultOptions, options));\n  }\n\n  initialize(channel, options) {\n\n    this.channel = channel;\n    this.options = options;\n    this.running = false;\n\n    let cableParams = options.params || {};\n    cableParams = Object.assign({ channel }, cableParams);\n\n    // ActionCable callback functions\n    this.initialized = () => this.dispatch({ type: 'CABLECAR_INITIALIZED' });\n    this.connected = () => {\n      this.dispatch({ type: 'CABLECAR_CONNECTED' });\n      this.running = true;\n      if (this.options.connected) { this.options.connected.call(); }\n    };\n    this.disconnected = () => {\n      this.dispatch({ type: 'CABLECAR_DISCONNECTED' });\n      this.running = false;\n      if (this.options.disconnected) { this.options.disconnected.call(); }\n    };\n    this.received = (msg) => { this.dispatch(msg); };\n    this.rejected = () => {\n      throw new Error(\n        `CableCar: Attempt to connect was rejected.\n        (Channel: ${this.channel})`,\n      );\n    };\n\n    if (!this.cable) {\n      this.cable = this.actionCableProvider.createConsumer(options.wsURL);\n    }\n    this.subscription = this.cable.subscriptions.create(\n      cableParams, {\n        initialized: this.initialized,\n        connected: this.connected,\n        disconnected: this.disconnected,\n        received: this.received,\n        rejected: this.rejected,\n      },\n    );\n  }\n\n  // Redux dispatch function\n  dispatch(action) {\n    const newAction = Object.assign(action, {\n      channel: this.channel,\n      CableCar__Action: true,\n    });\n    this.store.dispatch(newAction);\n  }\n\n  allows(action) {\n    if (typeof action !== 'object' || typeof action.type !== 'string') {\n      throw new Error(`CableCar: ${action} is not a valid redux action ({ type: ... })`);\n    }\n\n    return this.matchPrefix(action.type);\n  }\n\n  matchPrefix(type) {\n    const prefix = type.slice(0, this.options.prefix.length);\n    return prefix === this.options.prefix;\n  }\n\n  // ActionCable subscription functions (exposed globally)\n  changeChannel(channel, options = {}) {\n    this.unsubscribe();\n    this.initialize(channel, Object.assign(this.options, options));\n  }\n\n  getChannel() {\n    return this.channel;\n  }\n\n  getParams() {\n    return this.options.params;\n  }\n\n  perform(method, payload) {\n    this.subscription.perform(method, payload);\n  }\n\n  send(action) {\n    this.subscription.send(action);\n  }\n\n  unsubscribe(channel) {\n    this.subscription.unsubscribe();\n    this.disconnected();\n  }\n}\n","import CableCar from './cableCar';\nimport CableCarDispatcher from './cableCarDispatcher';\n\nlet cableProvider;\n\nconst dispatcher = new CableCarDispatcher();\n\nconst middleware = store => next => (incomingAction) => {\n  const action = incomingAction;\n  let car;\n\n  switch (action.type) {\n\n    case 'CABLECAR_INITIALIZED':\n    case 'CABLECAR_CONNECTED':\n    case 'CABLECAR_DISCONNECTED':\n      return next(action);\n\n    case 'CABLECAR_DESTROY':\n      dispatcher.destroyCar(action.CableCarChannel);\n      return store.getState();\n\n    case 'CABLECAR_DESTROY_ALL':\n      dispatcher.reset();\n      return store.getState();\n\n    case 'CABLECAR_CHANGE_CHANNEL':\n      dispatcher.changeCar(action.previousChannel, action.newChannel, action.options);\n      return store.getState();\n\n    default:\n      car = action.channel ? dispatcher.getCar(action.channel) : dispatcher.getDefaultCar();\n      if (car && car.allows(action) && !action.CableCar__Action) {\n        if (car.running) {\n          car.send(action);\n        } else {\n          console.error('CableCar: Dropped action!',\n            'Attempting to dispatch an action but cable car is not running.',\n            action,\n            'optimisticOnFail: ' + car.options.optimisticOnFail\n          );\n          return car.options.optimisticOnFail ? next(action) : store.getState();\n        }\n        return action.optimistic ? next(action) : store.getState();\n      } else {\n        return next(action);\n      }\n  }\n};\n\nmiddleware.connect = (store, channel, options) => {\n  if (!cableProvider) {\n    try {\n      cableProvider = require('actioncable');\n    } catch(e) {\n      throw new Error(`CableCar: No actionCableProvider set and 'actioncable' Node package failed to load: ${e}`);\n    }\n  }\n\n  let car = new CableCar(cableProvider, store, channel, options);\n  dispatcher.addCar(channel, car);\n\n  // public car object returned\n  return {\n    changeChannel: car.changeChannel.bind(car),\n    getChannel: car.getChannel.bind(car),\n    getParams: car.getParams.bind(car),\n    perform: car.perform.bind(car),\n    send: car.send.bind(car),\n    unsubscribe: car.unsubscribe.bind(car)\n  };\n}\n\nmiddleware.setProvider = (newProvider) => {\n  cableProvider = newProvider;\n}\n\nexport default middleware;\n","\nexport default class CableCarDispatcher {\n\n  constructor(provider) {\n    let lines = {};\n\n    this.addLine = (line, car) => { lines[line] = car; }\n    this.clearAllLines = () => { lines = {}; }\n    this.clearLine = (line) => { lines[line] = undefined; }\n    this.getLines = () => lines;\n  }\n\n  addCar(line, car) {\n    if (this.getCar(line)) {\n      throw(new ReferenceError(\n        'CableCar Dispatcher: cannot connect two cars to same line/channel: ' + line\n      ));\n    }\n    this.addLine(line, car);\n    return car;\n  }\n\n  changeCar(oldLine, newLine, options) {\n    let car = this.getCar(oldLine);\n\n    let carRoom = JSON.parse(car.subscription.identifier).room;\n\n    if (carRoom === options.params.room) {\n      return;\n    }\n\n    if (!car) {\n      console.error(new ReferenceError(\n        'CableCar Dispatcher (change failed): no car found on line/channel: ' + oldLine\n      ));\n      return false;\n    }\n\n    if (car.changeChannel) {\n      car.changeChannel(newLine, options);\n      this.clearLine(oldLine);\n      this.addLine(newLine, car);\n      return car;\n    } else {\n      console.error(new ReferenceError(\n        'CableCar Dispatcher (change failed): car has no changeChannel function'\n      ), car);\n      return false;\n    }\n  }\n\n  destroyCar(line) {\n    let activeLine = line || this.getSingleActiveLine();\n\n    if (!activeLine) {\n      console.error(new ReferenceError(\n        'CableCar Dispatcher (destroy failed): No car found on line/channel: ' + line\n      ))\n      return false;\n    }\n\n    let car = this.getCar(activeLine);\n    if (car && car.unsubscribe) {\n      car.unsubscribe();\n      this.clearLine(activeLine);\n      return car;\n    } else {\n      console.error(new ReferenceError(\n        'CableCar Dispatcher (destroy failed): car has no unsubscribe function'\n      ), car);\n      return false;\n    }\n  }\n\n  getCar(line) {\n    return this.getLines()[line];\n  }\n\n  getDefaultCar() {\n    let activeLine = this.getSingleActiveLine();\n    return activeLine ? this.getLines()[activeLine] : undefined;\n  }\n\n  getSingleActiveLine() {\n    const allLines = this.getLines();\n    let activeLines = [];\n    for (let line in allLines) {\n      if (allLines[line]) { activeLines.push(line); }\n    }\n    return activeLines.length === 1 ? activeLines[0] : undefined;\n  }\n\n  reset() {\n    this.clearAllLines();\n  }\n\n}\n","import middleware from './src/middleware';\n\nexport default middleware;\n"],"sourceRoot":""}